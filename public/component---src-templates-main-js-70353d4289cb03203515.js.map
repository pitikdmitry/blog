{"version":3,"sources":["webpack:///./src/components/TypeBlock/TypeItem.js","webpack:///./src/components/TypeBlock/TypeBlock.js","webpack:///./src/templates/main.js"],"names":["ETypeItemLabel","TypeItem","props","theme","to","title","label","description","onClick","Fragment","size","radius","default","space","color","violet","green","TypeBlock","items","map","item","index","key","Main","page","data","Consumer","Article","Page","Seo","pageQueryMain"],"mappings":"wKAIaA,EACJ,QADIA,EAEL,OAkEOC,EA/DE,SAAAC,GAAU,IACjBC,EAAkDD,EAAlDC,MAAOC,EAA2CF,EAA3CE,GAAIC,EAAuCH,EAAvCG,MAAOC,EAAgCJ,EAAhCI,MAAOC,EAAyBL,EAAzBK,YAAaC,EAAYN,EAAZM,QAE9C,OACE,kBAAC,IAAMC,SAAP,KACE,uBAAGL,GAAIA,EAAgDI,QAASA,EAAhE,sCAUqBL,EAAMO,KAAKC,OAAOC,QAVvC,GAqBkBT,EAAMU,MAAMD,QAmBdZ,EACHG,EAAMW,MAAMC,OAGTf,EACHG,EAAMW,MAAME,UA7CzB,yBAA8CV,GAC5C,6DASmBH,EAAMO,KAAKC,OAAOC,QATrC,GAoBgBT,EAAMU,MAAMD,QAmBdZ,EACHG,EAAMW,MAAMC,OAGTf,EACHG,EAAMW,MAAME,UA5CvB,oBAAgCX,GAChC,6DAQmBF,EAAMO,KAAKC,OAAOC,QARrC,GAmBgBT,EAAMU,MAAMD,QAmBdZ,EACHG,EAAMW,MAAMC,OAGTf,EACHG,EAAMW,MAAME,UA3CvB,0BAAsCT,IAH1C,wLAWuBJ,EAAMO,KAAKC,OAAOC,QAXzC,mnBAsBoBT,EAAMU,MAAMD,QAtBhC,0VAyCkBZ,EAzClB,qFA0CeG,EAAMW,MAAMC,OA1C3B,oBA6CkBf,EA7ClB,qFA8CeG,EAAMW,MAAME,MA9C3B,eAWuBb,EAAMO,KAAKC,OAAOC,QAXzC,GAsBoBT,EAAMU,MAAMD,QAmBdZ,EACHG,EAAMW,MAAMC,OAGTf,EACHG,EAAMW,MAAME,WChBhBC,EAtCG,SAAAf,GAAU,IAClBC,EAAUD,EAAVC,MAEFe,EAAQ,CACZ,CACEb,MAAO,SACPE,YAAa,oCACbD,MAAON,GAET,CACEK,MAAO,WACPE,YAAa,2BACbD,MAAON,IAIX,OACE,kBAAC,IAAMS,SAAP,KACE,gEACGS,EAAMC,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,EAAD,eAAUC,IAAKD,EAAOlB,MAAOA,GAAWiB,QAH9C,yW,SCtBJ,8CAgCeG,UAvBF,SAAArB,GACX,IAAMsB,EAAOtB,EAAMuB,KAAKD,KAExB,OACE,kBAAC,IAAMf,SAAP,KACE,kBAAC,eAAaiB,SAAd,MACG,SAAAvB,GAAK,OACJ,kBAACwB,EAAA,EAAD,CAASxB,MAAOA,GACd,kBAACyB,EAAA,EAAD,CAAMJ,KAAMA,EAAMrB,MAAOA,IACzB,kBAAC,EAAD,CAAWA,MAAOA,QAKxB,kBAAC0B,EAAA,EAAD,CAAKJ,KAAMD,MAdjB,IA0BaM,EAAa","file":"component---src-templates-main-js-70353d4289cb03203515.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\n\nexport const ETypeItemLabel = {\n  FRONT: \"front\",\n  BACK: \"back\"\n}\n\nconst TypeItem = props => {\n  const { theme, to, title, label, description, onClick } = props;\n\n  return (\n    <React.Fragment>\n      <a to={to} className={`type-item item-label-${label}`} onClick={onClick}>\n        <p className=\"type-item-title\">{title}</p>\n        <p className=\"type-item-description\">{description}</p>\n      </a>\n\n      <style jsx>{`\n        .type-item {\n          cursor: pointer;\n          text-decoration: none;\n          padding: 15px;\n          border-radius: ${theme.size.radius.default};\n          box-shadow: 0 2px 5px 0 rgb(0 0 0 / 15%);\n          \n          width: 46%;\n          min-height: 250px;\n          \n          display: flex;\n          flex-direction: column;\n          justify-content: flex-end;\n          transition-duration: 0.3s;\n          \n          padding: ${`${theme.space.default}`};\n\n          &:hover {\n              transform: scale(1.07);\n          }\n        }\n        \n        \n        .type-item-title {\n          font-size: 22px;\n          line-height: 1.2;\n          font-weight: 600;\n         \n        }\n        \n        .type-item-description {\n          font-size: 13px;\n        }\n        \n        .item-label-${ETypeItemLabel.FRONT} .type-item-title {\n          color: ${theme.color.violet};\n        }\n        \n        .item-label-${ETypeItemLabel.BACK} .type-item-title {\n          color: ${theme.color.green};\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nTypeItem.propTypes = {\n  item: PropTypes.object,\n  onClick: PropTypes.func,\n  theme: PropTypes.object.isRequired\n};\n\nexport default TypeItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TypeItem, { ETypeItemLabel } from \"./TypeItem\";\n\nconst TypeBlock = props => {\n  const { theme } = props;\n\n  const items = [\n    {\n      title: \"Бекенд\",\n      description: \"все то, что происходит на сервере\",\n      label: ETypeItemLabel.BACK,\n    },\n    {\n      title: \"Фронтенд\",\n      description: \"а это видит пользователь\",\n      label: ETypeItemLabel.FRONT,\n    }\n  ];\n\n  return (\n    <React.Fragment>\n      <div className=\"type-block\">\n        {items.map((item, index) => (\n          <TypeItem key={index} theme={theme} {...item} />\n        ))}\n      </div>\n\n      <style jsx>{`\n        .type-block {\n          display: flex;\n          justify-content: space-between;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nTypeBlock.propTypes = {\n  theme: PropTypes.object.isRequired\n};\n\nexport default TypeBlock;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Seo from \"../components/Seo\";\nimport Article from \"../components/Article\";\nimport Page from \"../components/Page\";\nimport TypeBlock from \"../components/TypeBlock\";\nimport { ThemeContext } from \"../layouts\";\n\nconst Main = props => {\n  const page = props.data.page;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <Page page={page} theme={theme} />\n            <TypeBlock theme={theme} />\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo data={page} />\n    </React.Fragment>\n  );\n};\n\nMain.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default Main;\n\n//eslint-disable-next-line no-undef\nexport const pageQueryMain = graphql`\n  query PageByPathMain($slug: String!) {\n    page: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      htmlAst\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}